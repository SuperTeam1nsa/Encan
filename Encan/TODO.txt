- Faire des exceptions
- Les threads de Vendeur et Acheteur
	- Gestionnaire de transcation
	- Verification de transactions

- UML
- 25 classes (preeeeesque)
- Exception dans ObjetEncan:
	- Try/catch si nbMaxBid mais que bid < prixMinAchat



BUDGET TEMPS: __TOTAL__ : 7h + 5h bonus
Exceptions : 1h
Créer deux classes adaptateurs qui se servent de l'Encan
	- EncanPourAcheteur 1h
		- Enchérir
	- EncanPourVendeur 1h
		- Mettre aux enchères

Threads 4h 
	- Se servir de l'ObjetEncan qqpart
	- Acheteurs 2h
		- Faire l'achat
		- Se delete
	- Vendeurs 2h
		- Mettre en vente
		- Se delete
		- Appelle une fonction de l'Encan pour savoir si son objet est toujours dans la liste avec en paramètre son Objet.

Faire le log + Compteur 2h

Débogage 5h?
Balancement 3h? 


Vendredi 30/11 : UML
du 1/12 au 12/12 : Exceptions, Adaptateurs et Threads
du 13/12 au 16/12 : Débogage + Bonus

Questions à demander :
	- Threads : mutex qu'est qu'il lock ?
	- UML correct ?
	
Threads rqs:
Thread Encan: se servir du problème des lecteurs/rédacteurs:
=> Acheteru:  mutex autour du getListeObjet +for || copie de la liste et réalisation de l'enchère
=> le même mutex est check pour l'écriture dans la liste par un vendeur 
=> mutex déclaré en statique dans l'encan
thread().detach(); pour créer des threads anonymes dans le main
boucle while(1) avec un break quand l'objet est vendu/acheté 